/* 
CSS is used to define styles for your web pages, 
including the design,
layout and variations in display for different devices 
and screen sizes.

/* This is a comment */
body {
    background-color: lightblue; /* This is an inline comment */
  }
  
  /* Styling for the main heading */
  h1 {
    color: white;
    text-align: center;
  }
  
  /* Paragraph styling */
  p {
    font-family: verdana;
    font-size: 20px;
  }

  /*
CSS solved a big problem for HTML
-> HTML was NEVER intended to contain tags for formatting a webpage

- HTML describes the content of a web page,
When tags like <font>, and color attributes were added
to the HTML 3.2 specification, 
it started a nightmare for web developers. 

Development of large websites, 
where fonts and color information were added to every single page, 
became a long and expensive process.

To solve this problem, 
the World Wide Web Consortium (W3C) created CSS.
CSS removed the style formatting from the HTML page.
*/

/*CSS style definitions are normally saved in external .css files*/

/*With an external stylesheet file, you can change the look of an entire website by changing just one file!*/

/*
3 ways to add CSS to HTML

Inline:
Quick makeover directly in an HTML tag
body { background-color: powderblue; } h1 { color: blue; } p { color: red }

Internal: 
Dedicated section in HTML file for styles

External:
Seperate file completely dedicated to styles

CSS makes you website 
  - look good
  - improve readability and user experience
  - allow your website to work on multiple devices
*/






/*  ////////////////////////////////////////////////////////////////////    SYNTAX  /////////////////////////////////////////////////////   */
    /*Declaration    Declaration*/
h1 {color:blue; font-size:12px;}
/*selector property:value; property:value;*/

/*
The selector points to the HTML element you want to style.

The declaration block contains one or more declarations separated by semicolons.

Each declaration includes a CSS property name and a value, separated by a colon.

Multiple CSS declarations are separated with semicolons, and declaration blocks are surrounded by curly braces.*/

/*In this example all <p> elements will be center-aligned, with a red text color:*/

p {
  color: red;
  text-align: center;
}

/* p is the selector that points to the HTML element you want to style
<p>

color is a propery, red is the property value

text-align is a propery, center is the property value*/




/*  ////////////////////////////////////////////////////////////////////    CSS SELECTORS    /////////////////////////////////////////////////////   */

/*CSS selectors are used to "find" (or select) the HTML elements you want to style

We can dicide CSS selectors into 5 catagories:

    Simple selectors (select elements based on name, id, class)

    Combinator selectors (select elements based on a specific relationship between them)
    
    Pseudo-class selectors (select elements based on a certain state)
    
    Pseudo-elements selectors (select and style a part of an element)
    
    Attribute selectors (select elements based on an attribute or attribute value)


CSS ELEMENT SELECTOR
selects HTML elements based on element name*/

p {
    text-align: center;
    color: red;
  }



/*CSS ID SELECTOR
uses the id attribute of an HTML element to select a specific element
The id of an element is unique within a page, so the id selector is used to select one unique element!
To select an element with a specific id, write a hash (#) character, followed by the id of the element.

The CSS rule below will be applied to the HTML element with id="para1": */

#para1 {
  text-align: center;
  color: red;
}

/* An id name CANNOT start with a number 


CSS CLASS SELECTOR
selects HTML elements with a specific class attribute.
To select elements with a specific class, write a period (.) character, followed by the class name.

Example
In this example all HTML elements with class="center" will be red and center-aligned: */

.center {
    text-align: center;
    color: red;
}

/*You can also specify that only specific HTML elements should be affected by a class.

Example
In this example only <p> elements with class="center" will be red and center-aligned: */

p.center {
    text-align: center;
    color: red;
  }

/*HTML elements can also refer to more than one class.

Example
In this example the <p> element will be styled according to class="center" and to class="large":

<p class="center large">This paragraph refers to two classes.</p>

A class name cannot start with a number



CSS UNIVERSAL SELECTOR
The universal selector (*) selects all HTML elements on the page.

Example
The CSS rule below will affect every HTML element on the page: */

* {
  text-align: center;
  color: blue;
}

/* CSS GROUPING SELECTOR

grouping selector selects all the HTML elements with the same style definitions.

Look at the following CSS code (the h1, h2, and p elements have the same style definitions):*/

h1 {
  text-align: center;
  color: red;
}

h2 {
  text-align: center;
  color: red;
}

p {
  text-align: center;
  color: red;
}

/*It will be better to group the selectors, to minimize the code.

To group selectors, separate each selector with a comma.

Example
In this example we have grouped the selectors from the code above: */

h1, h2, p {
  text-align: center;
  color: red;
}
/*

ALL CSS SIMPLE SELECTORS
#id	                #firstname	            Selects the element with id="firstname"

.class	            .intro	                Selects all elements with class="intro"

*	                  *	                      Selects all elements

element	            p	                      Selects all <p> elements

element,element,..	div, p	                Selects all <div> elements and all <p> elements


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


THREE WAYS TO INSERT CSS
There are three ways of inserting a style sheet:

  - External CSS
  - Internal CSS
  - Inline CSS


External CSS
With an external style sheet, 
you can change the look of an entire website 
by changing just one file!

Each HTML page must include 
a reference to the external style sheet 
file inside the <link> element, inside the head section.


Example
External styles are defined within the <link> element, 
inside the <head> section of an HTML page:*/

<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="mystyle.css">
</head>
<body>

<h1>This is a heading</h1>
<p>This is a paragraph.</p>

</body>
</html>

/*
An external style sheet can be written in any text editor, and must be saved with a .css extension.

The external .css file should not contain any HTML tags.

Here is how the "mystyle.css" file looks:*/

body {
  background-color: lightblue;
}

h1 {
  color: navy;
  margin-left: 20px;
}

/*
Internal CSS

An internal style sheet may be used if 
one single HTML page has a unique style.

The internal style is defined 
inside the <style> element, inside the head section.

Example
Internal styles are defined within the <style> element, 
inside the <head> section of an HTML page*/

<!DOCTYPE html>
<html>
<head>
<style>
body {
  background-color: linen;
}

h1 {
  color: maroon;
  margin-left: 40px;
}
</style>
</head>
<body>

<h1>This is a heading</h1>
<p>This is a paragraph.</p>

</body>
</html>

/*
Inline CSS
An inline style may be used to apply a unique style 
for a single element.

To use inline styles, add the style attribute to the 
relevant element. 
The style attribute can contain any CSS property.

EX.
inline styles are defined within the "style" attribute of the relevant element
*/

<!DOCTYPE html>
<html>
<body>

<h1 style="color:blue;text-align:center;">This is a heading</h1>
<p style="color:red;">This is a paragraph.</p>

</body>
</html>

/*
Multiple Style Sheets
If some properties have been defined for the same selector (element) in different style sheets, 
the value from the last read style sheet will be used. 

Assume that an external style sheet has the following style for the <h1> element:*/

h1 {
  color: navy;
}

/*
Then, assume that an internal style sheet also has the following style for the <h1> element:*/

h1 {
  color: orange;   
}

/*
Ex
If the internal style is defined AFTER
the link to the external style sheet, 
the <h1> elements will be "orange":*/

<head>
<link rel="stylesheet" type="text/css" href="mystyle.css">
<style>
h1 {
  color: orange;
}
</style>
</head>

/*
HOWEVER
if the internal style is defined BEFORE
the link to the external style sheet, 
the <h1> elements will be "navy": */

<head>
<style>
h1 {
  color: orange;
}
</style>
<link rel="stylesheet" type="text/css" href="mystyle.css">
</head>

/*
CASCADING ORDER
What style will be used when there is more than one style specified for an HTML element?

All the styles in a page will "cascade" into a new 
"virtual" style sheet by the following rules, where number one has the highest priority:

  1. Inline style (inside an HTML element)
  2. External and internal style sheets (in the head section)
  3. Browser default

So, an inline style has the highest priority, 
and will override external and internal styles and browser defaults.



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


CSS COMMENTS

Comments are ignored by browsers.

A CSS comment is placed inside the <style> element, 
and starts with /* and ends with */

/*
HTML and CSS Comments

From the HTML tutorial, 
you learned that you can add comments to your 
HTML source by using the <!--...--> syntax.

In the following example, 
we use a combination of HTML and CSS comments:*/

<!DOCTYPE html>
<html>
<head>
<style>
p {
  color: red; /* Set text color to red */
}
</style>
</head>
<body>

<h2>My Heading</h2>

<!-- These paragraphs will be red -->
<p>Hello World!</p>
<p>This paragraph is styled with CSS.</p>
<p>HTML and CSS comments are not shown in the output.</p>

</body>
</html>
